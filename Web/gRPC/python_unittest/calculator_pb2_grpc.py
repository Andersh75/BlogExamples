# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import calculator_pb2 as calculator__pb2


class CalculatorStub(object):
  """The calculator service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Square = channel.unary_unary(
        '/int32_math.Calculator/Square',
        request_serializer=calculator__pb2.CalculationRequest.SerializeToString,
        response_deserializer=calculator__pb2.CalculationResponse.FromString,
        )
    self.NaturalNumberGenerator = channel.unary_stream(
        '/int32_math.Calculator/NaturalNumberGenerator',
        request_serializer=calculator__pb2.CalculationRequest.SerializeToString,
        response_deserializer=calculator__pb2.CalculationResponse.FromString,
        )
    self.Summation = channel.stream_unary(
        '/int32_math.Calculator/Summation',
        request_serializer=calculator__pb2.CalculationRequest.SerializeToString,
        response_deserializer=calculator__pb2.CalculationResponse.FromString,
        )
    self.Buffer3Sum = channel.stream_stream(
        '/int32_math.Calculator/Buffer3Sum',
        request_serializer=calculator__pb2.CalculationRequest.SerializeToString,
        response_deserializer=calculator__pb2.CalculationResponse.FromString,
        )


class CalculatorServicer(object):
  """The calculator service definition.
  """

  def Square(self, request, context):
    """Unary RPC (Simple RPC)
    y(x) = x^2
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def NaturalNumberGenerator(self, request, context):
    """Server-side streaming RPC (Response streaming RPC)
    y(x)_j = {t | t in N+, t <= x}_j
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Summation(self, request_iterator, context):
    """Client-side streaming RPC (Request streaming RPC)
    y(x_i) = sum x_i
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Buffer3Sum(self, request_iterator, context):
    """Duplex streaming RPC (Bidirectional RPC)
    y(x_i)_j = {x_i + x_(i-1) + x_(i-2) | i mod 3 = 2}_j,
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CalculatorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Square': grpc.unary_unary_rpc_method_handler(
          servicer.Square,
          request_deserializer=calculator__pb2.CalculationRequest.FromString,
          response_serializer=calculator__pb2.CalculationResponse.SerializeToString,
      ),
      'NaturalNumberGenerator': grpc.unary_stream_rpc_method_handler(
          servicer.NaturalNumberGenerator,
          request_deserializer=calculator__pb2.CalculationRequest.FromString,
          response_serializer=calculator__pb2.CalculationResponse.SerializeToString,
      ),
      'Summation': grpc.stream_unary_rpc_method_handler(
          servicer.Summation,
          request_deserializer=calculator__pb2.CalculationRequest.FromString,
          response_serializer=calculator__pb2.CalculationResponse.SerializeToString,
      ),
      'Buffer3Sum': grpc.stream_stream_rpc_method_handler(
          servicer.Buffer3Sum,
          request_deserializer=calculator__pb2.CalculationRequest.FromString,
          response_serializer=calculator__pb2.CalculationResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'int32_math.Calculator', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
